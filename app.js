console.log('')
console.log('-------------------------------')
console.log('  –°–∫—Ä–∏–ø—Ç –ó–∞–ø—É—â–µ–Ω! ')
console.log('  –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: Sergeu Shabolin')
console.log('  vk.com/shabolin209')

console.log('-------------------------------')
console.log('')


const { VK } = require('vk-io');
const vk = new VK();
const commands = [];
const frac = require('./frac.json');
const request = require('prequest');

function time() { 
let date = new Date(); 
let days = date.getDate(); 
let hours = date.getHours(); 
let minutes = date.getMinutes();  
let seconds = date.getSeconds(); 
if (hours < 10) hours = "0" + hours; 
if (minutes < 10) minutes = "0" + minutes; 
if (seconds < 10) seconds = "0" + seconds; 
var times = hours + ':' + minutes + ':' + seconds 
return times; 
};

const cars = [
   {
     name: '–°–∫—É—Ç–µ—Ä', 
     cost: 1000,
     id: 1,
     att: 'photo528262675_457242541'
    }, 
    {
    name: '–ú–æ—Ç–æ—Ü–∏–∫–ª', 
    cost: 12000,
    id: 2,
    att: 'photo528262675_457242540'
    }, 
    {
name: 'Lads Vesta', 
cost: 1000000,
id: 3,
att: 'photo528262675_457242545'
}, 
{
name: ' BMW 7 Series', 
cost: 1600000,
id: 4,
att: 'photo528262675_457242546'
}, 
{
name: 'Mercedes AMG', 
cost: 2100000,
id: 5,
att: 'photo528262675_457242548'
}, 
{
name: 'Lamborghini Huracan Coupe', 
cost: 3000000,
id: 6,
att: 'photo528262675_457242549'
}
];

const businesses = [
	{
		name: '–ö–æ—Ñ–µ',
		cost: 50000,
		earn: 400,
		id: 1,
		icon: 'üè¨'
	},
	{
		name: '–°—É–ø–µ—Ä-–º–∞—Ä–∫–µ—Ç',
		cost: 100000,
		earn: 700,
		id: 2,
		icon: 'üè™'
	},
	{
		name: '–ó–∞–ø—Ä–∞–≤–∫–∞',
		cost: 300000,
		earn: 2500,
		id: 3,
		icon: '‚õΩ'
	}
];

const works = [
	{
		name: '–î–≤–æ—Ä–Ω–∏–∫',
		requiredLevel: 1,
		min: 1000,
		max: 1500,
		id: 1
	},
	{
		name: '–û—Ö—Ä–∞–Ω–Ω–∏–∫',
		requiredLevel: 3,
		min: 2000,
		max: 3500,
		id: 2
	},
	{
		name: '–§–µ—Ä–º–µ—Ä',
		requiredLevel: 5,
		min: 3000,
		max: 4500,
		id: 3
	},
	{
		name: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∫–æ—Ñ–µ',
		requiredLevel: 8,
		min: 4000,
		max: 5500,
		id: 4
	},
	{
		name: '–ü–∏–ª–æ—Ç',
		requiredLevel: 10,
		min: 6500,
		max: 7000,
		id: 5
	},
	{
		name: '–°–µ–∫—Ä–µ—Ç–∞—Ä—å',
		requiredLevel: 14,
		min: 9000,
		max: 9489,
		id: 6
	},
	{
		name: '–î–µ–ø—É—Ç–∞—Ç',
		requiredLevel: 22,
		min: 10000,
		max: 12500,
		id: 7
	},
	{
		name: '–ü—Ä–µ–º—å–µ—Ä-–ú–∏–Ω–∏—Å—Ç—Ä',
		requiredLevel: 25,
		min: 12500,
		max: 13500,
		id: 8
	},
	{
		name: '–°–æ–∑–¥–∞—Ç–µ–ª—å –±–æ—Ç–∞',
		requiredLevel: 49,
		min: 160000,
		max: 170500,
		id: 9
	}
];

const utils = {
	sp: (int) => {
		int = int.toString();
		return int.split('').reverse().join('').match(/[0-9]{1,3}/g).join('.').split('').reverse().join('');
	},
	rn: (int, fixed) => {
		if (int === null) return null;
		if (int === 0) return '0';
		fixed = (!fixed || fixed < 0) ? 0 : fixed;
		let b = (int).toPrecision(2).split('e'),
			k = b.length === 1 ? 0 : Math.floor(Math.min(b[1].slice(1), 14) / 3),
			c = k < 1 ? int.toFixed(0 + fixed) : (int / Math.pow(10, k * 3) ).toFixed(1 + fixed),
			d = c < 0 ? c : Math.abs(c),
			e = d + ['', '—Ç—ã—Å', '–º–ª–Ω', '–º–ª—Ä–¥', '—Ç—Ä–ª–Ω'][k];

			e = e.replace(/e/g, '');
			e = e.replace(/\+/g, '');
			e = e.replace(/Infinity/g, '–î–û–•–ï–†–ê');

		return e;
	},
	gi: (int) => {
		int = int.toString();

		let text = ``;
		for (let i = 0; i < int.length; i++)
		{
			text += `${int[i]}&#8419;`;
		}

		return text;
	},
	decl: (n, titles) => { return titles[(n % 10 === 1 && n % 100 !== 11) ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2] },
	random: (x, y) => {
		return y ? Math.round(Math.random() * (y - x)) + x : Math.round(Math.random() * x);
	},
	pick: (array) => {
		return array[utils.random(array.length - 1)];
	}
}

const rotateText = {
	q: 'q',
	w: ' ç',
	e: '«ù',
	r: '…π',
	t: ' á',
	y: ' é',
	u: 'u',
	i: '·¥â',
	o: 'o',
	p: 'p',
	a: '…ê',
	s: 's',
	d: 'd',
	f: '…ü',
	g: '∆É',
	h: '…•',
	j: '…æ',
	k: ' û',
	l: 'l',
	z: 'z',
	x: 'x',
	c: '…î',
	v: ' å',
	b: 'b',
	n: 'n',
	m: '…Ø',

	–π: '≈Ü',
	—Ü: '«π',
	—É: ' é',
	–∫: ' û',
	–µ: '«ù',
	–Ω: '–Ω',
	–≥: '…π',
	—à: 'm',
	—â: 'm',
	–∑: 'Œµ',
	—Ö: '—Ö',
	—ä: 'q',
	—Ñ: '—Ñ',
	—ã: 'ƒ±q',
	–≤: ' ö',
	–∞: '…ê',
	–ø: 'u',
	—Ä: 'd',
	–æ: '–æ',
	–ª: 'v',
	–¥: '…ì',
	–∂: '–∂',
	—ç: '—î',
	—è: ' Å',
	—á: '“ª',
	—Å: '…î',
	–º: 'w',
	–∏: '–∏',
	—Ç: '…Ø',
	—å: 'q',
	–±: '∆ç',
	—é: 'oƒ±'
}

let smileerror = utils.pick([`üòí`, `üòØ`, `üòî`, `ü§î`]);
let smilesuccess = utils.pick([`üòØ`, `üôÇ`, `ü§ë`, `‚ò∫`]);

let users = require('./users.json');
let config = require('./settings.json');
let buttons = [];

setInterval(async () => {
	await saveUsers();
	
	console.log(' –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞.');
	console.log('');
}, 30000);

setInterval(async () => {

smileerror = utils.pick([`üòí`, `üòØ`, `üòî`, `ü§î`]);
smilesuccess = utils.pick([`üòØ`, `üôÇ`, `ü§ë`, `‚ò∫`]);

}, 1);

setInterval(async () => {
	users.filter(x=> x.settings.old == false).map(x=> {
		x.settings.old == true;
	});
}, 604800);

setInterval(async () => {
	users.map(user => {
		if(user.business)
		{
			const biz = businesses.find(x=> x.id === user.business);
			if(!biz) return;

			user.biz += biz.earn;
		}
	});
}, 3600000);


function clearTemp()
{
	users.map(user => {
		user.timers.hasWorked = false;
		user.timers.bonus = false;
		user.energy = 10;
	});
}

function msgError(messagetext)
{
	return bot(`${messagetext} ${utils.pick([`üòØ`, `üôÇ`, `ü§ë`, `‚ò∫`])}`);
}

clearTemp();

async function saveUsers()
{
	require('fs').writeFileSync('./users.json', JSON.stringify(users, null, '\t'));
	return true;
}

async function saveConfig()
{
	require('fs').writeFileSync('./settings.json', JSON.stringify(config, null, '\t'));
	return true;
}

vk.setOptions({ token: config.grouptoken, pollingGroupId: config.groupid });
const { updates, snippets } = vk;

updates.startPolling();
updates.on('message', async (message) => {
	if(Number(message.senderId) <= 0) return;
	if(/\[public206188420\|(.*)\]/i.test(message.text)) message.text = message.text.replace(/\[public206188420\|(.*)\]/ig, '').trim();

	if(!users.find(x=> x.id === message.senderId))
	{
		const [user_info] = await vk.api.users.get({ user_id: message.senderId });
		const date = new Date();

		users.push({
			id: message.senderId,
			uid: users.length,
			balance: 500,
			bank: 0,
			texrab: false, 
			promo: true, 
			tag: user_info.first_name,
			mention: true, 
			nicklimit: 15,
			biz: 0,
			business: 0,
			bizlvl: 0,
			exp: 1,
			level: 1,
			regDate: `${date.getDate()}.${date.getMonth()}.${date.getFullYear()}`,
			timers: {
				displayTime: false, 
				bonus: false, 
				hasWorked: false, 
				work: false
			},
		   tag: user_info.first_name,
			notifications: true,
			referal: null, 
			transport: {
			car: 0,
			}, 
			settings: {
			adm: 1,
			firstmsg: true, 
				trade: true,
 			limit: 100000,
            }, 
            });
            console.log(` –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –Ω–æ–≤—ã–π –∏–≥—Ä–æ–∫ [–ò–≥—Ä–æ–∫–æ–≤: ${users.length}]`);
		console.log(``);
		saveUsers();
	}

	message.user = users.find(x=> x.id === message.senderId);

	const bot = (text, params) => {
		return message.send(`${message.user.mention ? `@id${message.user.id} (${message.user.tag})` : `${message.user.tag}`}, ${text}`, params);
	}

	if(message.user.ban) return bot(`üî∏‚Ä∫ –í–∞—à –∞–∫–∫–∞—É–Ω –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!`);

	const command = commands.find(x=> x[0].test(message.text));

	if(message.user.settings.firstmsg)
	{
bot(`
üá∑üá∫–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Russia Bot | –ò–≥—Ä–æ–≤–æ–π –±–æ—Ç ! 
‚ù§–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Å—è –Ω–∞ –≥—Ä—É–ø–ø—É –∏  –Ω–µ –ø—Ä–æ–ø—É—Å–∫–∞–π –Ω–æ–≤–æ—Å—Ç–∏! 
üëëRussia Bot | –ò–≥—Ä–æ–≤–æ–π –±–æ—Ç - —ç—Ç–æ —Ä–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π –±–æ—Ç —Å —Ä–∞–∑–Ω—ã–º–∏ –ø—Ä–∏–∫–æ–ª—å–Ω—ã–º–∏ –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏, –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π –¥–µ–Ω—å–≥–∏ –∏ —Å—Ç–∞–Ω–æ–≤–∏—Å—å —Å–∞–º—ã–º –±–æ–≥–∞—Ç—ã–º!`, 
        {
			keyboard:JSON.stringify(
		{
			"one_time": false, 
			"buttons": [
			[{
				"action": {
				"type": "text",
				"payload": "{\"button\": \"1\"}",
				"label": "üëë –ë–æ–Ω—É—Å"
		},
			"color": "positive"
		},
		{
				"action": {
				"type": "text",
				"payload": "{\"button\": \"2\"}",
				"label": "üá∑üá∫ –ü–æ–º–æ—â—å"
		},
			"color": "primary"
		},
		{
				"action": {
				"type": "text",
				"payload": "{\"button\": \"3\"}",
				"label": "üë§ –ü—Ä–æ—Ñ–∏–ª—å"
		},
			"color": "primary"
		}
]
		]
			})
		});
		
		message.user.settings.firstmsg = false;
		
		vk.api.messages.send({chat_id: 1 ,message: `üî• K –Ω–∞–º–∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∏–≥—Ä–æ–∫:
		 üìù –ò–º—è: @id${user_info.id}(${user_info.first_name})
		 ‚úÖ –Ø –µ–º—É –ø—Ä–∏—Å–≤–æ–∏–ª uid: ${message.user.uid}
		 üåê –í—Å–µ–≥–æ –∏–≥—Ä–æ–∫–æ–≤: ${users.length}`, random_id: 0}).catch((error) => { console.log(` –û—à–∏–±–∫–∞. ${error}`);})
		 console.log(`+1 —á–µ–ª ${utils.rn(users.length)}`);
		
		saveUsers();
		return;

	}

	if(!command)
	{

		if(!message.isChat) return bot(`üá∑üá∫–£–ø—Å...–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!  –í–≤–µ–¥–∏—Ç–µ "–ü–æ–º–æ—â—å" —á—Ç–æ–± —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥. `);
		if(message.isChat) return;

	}

	if(message.user.exp >= 24)
	{
		message.user.exp = 1;
		message.user.level += 1;
	}
	
	if(message.user.texrab == true && message.user.settings.adm != 5 )
	{
		return bot(`‚ö†–ò–¥—É—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¢–µ—Ö.–†–∞–±–æ—Ç—ã`)
	}
	
	
	message.args = message.text.match(command[0]);
	await command[1](message, bot);

	saveUsers();
	console.log(` –í–≤–µ–¥–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞: ${message.text}.`)
	console.log(``)
});

const cmd = {
	hear: (p, f) => {
		commands.push([p, f]);
	}
}

cmd.hear(/^(?:–ø–æ–º–æ—â—å|–∫–æ–º–∞–Ω–¥—ã|üá∑üá∫ –ü–æ–º–æ—â—å|–º–µ–Ω—é|help|commands|cmds|menu|–Ω–∞—á–∞—Ç—å|start|@rassia_rp_bot üá∑üá∫ –ü–æ–º–æ—â—å)$/i, async (message, bot) => {
	await bot(`üëë–º–æ–∏ –∫–æ–º–∞–Ω–¥—ã:
	¬´ü§ñ¬ª –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ:
	      
	      ‚Äπüë§‚Ä∫ –ü—Ä–æ—Ñ–∏–ª—å - –≤–∞—à –∏–≥—Ä–æ–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å. 
	      ‚Äπüí∞‚Ä∫ –ë–∞–ª–∞–Ω—Å - –≤–∞—à –∏–≥—Ä–æ–≤–æ–π –±–∞–ª–∞–Ω—Å. 
	      ‚Äπüî∏‚Ä∫ –ë–æ—Ç - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ. 
    ¬´üíµ¬ª –•–∞–ª—è–≤–∞:
    
          ‚Äπüëë‚Ä∫ –ë–æ–Ω—É—Å - –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å.
     ¬´üñ±¬ª –ò–≥—Ä—ã:
     
          ‚Äπüïπ‚Ä∫ –ö–∞–∑–∏–Ω–æ  `, );
{
			keyboard:JSON.stringify(
		{
			"one_time": false, 
			"buttons": [
			[{
				"action": {
				"type": "text",
				"payload": "{\"button\": \"1\"}",
				"label": "üëë –ë–æ–Ω—É—Å"
		},
			"color": "positive"
		},
		{
				"action": {
				"type": "text",
				"payload": "{\"button\": \"2\"}",
				"label": "üá∑üá∫ –ü–æ–º–æ—â—å"
		},
			"color": "primary"
		},
		{
				"action": {
				"type": "text",
				"payload": "{\"button\": \"3\"}",
				"label": "üë§ –ü—Ä–æ—Ñ–∏–ª—å"
		},
			"color": "primary"
		}
]
		]
			})
		};
});

cmd.hear(/^(?:–ø—Ä–æ—Ñ–∏–ª—å|üë§ –ü—Ä–æ—Ñ–∏–ª—å|–ø—Ä–æ—Ñ|@rassia_rp_bot üë§ –ü—Ä–æ—Ñ–∏–ª—å)$/i, async (message, bot) => {
	let text = ``;

	text += `üîé ID: ${message.user.uid}\n`;
	text += `${message.user.settings.adm.toString().replace(/1/gi, "üîπ–ò–≥—Ä–æ–∫ ").replace(/2/gi, "üá∑üá∫–î–µ–ø—É—Ç–∞—Ç").replace(/3/gi, "üî•–ü—Ä–µ–º—å–µ—Ä-–º–∏–Ω–∏—Å—Ç—Ä").replace(/4/gi, "üíé –ü—Ä–µ–∑–∏–¥–µ–Ω—Ç")}\n`;
	text += `üí∞ –ë–∞–ª–∞–Ω—Å: ${utils.sp(message.user.balance)}‚ÇΩ\n`;
	text += `üè¶ –ë–∞–Ω–∫: ${utils.sp(message.user.bank)}‚ÇΩ\n`;
	text += `üìä –£—Ä–æ–≤–µ–Ω—å: ${message.user.level} [${message.user.exp}/24]\n`;
	
	if(message.user.transport.car || message.user.business)
	{
		text += `\nüìú –ò–º—É—â–µ—Å—Ç–≤–æ:\n`;

		if(message.user.transport.car) text += `‚†Äüèé –ú–∞—à–∏–Ω–∞: ${cars[message.user.transport.car - 1].name}\n`;
		if(message.user.business) text += `‚†Ä${businesses[message.user.business - 1].icon} ${businesses[message.user.business - 1].name}\n`;
   }
   text += `\nüá∑üá∫ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${message.user.regDate}`;
	return bot(`üî∏–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\n${text}`);
});

cmd.hear(/^(?:–æ–±–Ω—É–ª–∏—Ç—å|delluser)\s?([0-9]+)?/i, async (message, args, bot) => {
    let user = users.find(x=> x.uid === Number(message.args[1]));
	if(message.user.settings.adm < 4) return bot(`–≥–æ —Å–µ–∫—Å`)
	if(!message.args[1] || !users[message.args[1]]) return message.send(`–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: '–æ–±–Ω—É–ª–∏—Ç—å [ID]'`);
		users[message.args[1]].bank = 0;
		users[message.args[1]].balance = 0;
		users[message.args[1]].car = 0;
		users[message.args[1]].settings.adm = 0;
		
			

		return message.send(`–í—ã –æ–±–Ω—É–ª–∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è [@id${users[message.args[1]].id}(${users[message.args[1]].tag})]`);
		console.log(`–ë—ã–ª –æ–±–Ω—É–ª—ë–Ω –∏–≥—Ä–æ–∫ id${users[message.args[1]].id}`);
		console.log(``);
		saveUsers();
	});
	
	cmd.hear(/^(?:–±–∞–ª–∞–Ω—Å)$/i, async (message, bot) => {
	let text = `–Ω–∞ —Ä—É–∫–∞—Ö ${utils.sp(message.user.balance)}‚ÇΩ`;

	if(message.user.bank) text += `\nüè¶ –ë–∞–Ω–∫: ${utils.sp(message.user.bank)}‚ÇΩ`;
	
	return bot(text);
});

cmd.hear(/^(?:–±–æ–Ω—É—Å|üëë –ë–æ–Ω—É—Å|@rassia_rp_bot üëë –ë–æ–Ω—É—Å)$/i, async (message, bot) => {

	if(message.user.timers.bonus >= 0) return bot(`–±–æ–Ω—É—Å –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å —á–µ—Ä–µ–∑ 24 —á–∞—Å–∞${smileerror}`);

	let prize = utils.pick([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]);

	setTimeout(() => {
		message.user.timers.bonus = false;
	}, 86400000);

	message.user.timers.bonus = true;


	if(prize === 1)
	{
		message.user.balance += 500;
		return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 500‚ÇΩ ${smilesuccess}`);
	}

	if(prize === 2)
	{
		message.user.balance += 1000;
		return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 1000‚ÇΩ ${smilesuccess}`);
	}

	if(prize === 3)
	{
		message.user.exp += 1;
		return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 5 –æ–ø—ã—Ç–∞ `);
	}

	if(prize === 4)
	{
		message.user.exp += 1;
		return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 1 –æ–ø—ã—Ç–∞`);
	}

	if(prize === 5)
	{
		message.user.exp += 10;
		return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 10 –æ–ø—ã—Ç–∞`);
	}

	if(prize === 6)
	{
		message.user.exp += 2;
		return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 2 –æ–ø—ã—Ç–∞`);
	}
	if(prize === 7)
	{
		message.user.exp += 3;
		return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 3 –æ–ø—ã—Ç–∞`);
	}
	if(prize === 8)
	{
		message.user.exp += 4;
		return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 4 –æ–ø—ã—Ç–∞`);
	}
	if(prize === 9)
	{
		message.user.bank += 1000;
		return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 1.000‚ÇΩ –Ω–∞ —Å–≤–æ–π –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á—ë—Ç ${smilesuccess}`);
	}
	if(prize === 10)
	{
		message.user.bank += 5000;
		return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 5.000‚ÇΩ –Ω–∞ —Å–≤–æ–π –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á—ë—Ç ${smilesuccess}`);
	}

	if(prize === 11)
	{
		message.user.bank += 10000;
		return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 10.000$ –Ω–∞ —Å–≤–æ–π –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á—ë—Ç ${smilesuccess}`);
	}

	if(prize === 12)
	{
		message.user.bank += 50000;
		return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 50.000‚ÇΩ –Ω–∞ —Å–≤–æ–π –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á—ë—Ç ${smilesuccess}`);
	}
});

cmd.hear(/^(?:–±–∞–Ω)\s(.*)$/i, async (message, bot) => { 
message.args[1] = message.args[1].replace(/(\.|\,)/ig, '');
message.args[1] = message.args[1].replace(/(–∫|k)/ig, '000');
message.args[1] = message.args[1].replace(/(–º|m)/ig, '000000');
message.args[1] = message.args[1].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, message.user.balance);

if(message.user.settings.adm < 3) return; 

{ 
let user = users.find(x=> x.uid === Number(message.args[1])); 
if(!user) return bot(`—É–∫–∞–∂–∏—Ç–µ ID –∏–≥—Ä–æ–∫–∞ –∏–∑ –µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è. ${smileerror}`); 


user.ban = true; 

saveUsers();
await bot(`–≤—ã –∑–∞–±–∞–Ω–∏–ª–∏ –∏–≥—Ä–æ–∫–∞ *id${user.id} (${user.tag}).`,); 
vk.api.messages.send({ user_id: user.id, message: `–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω. ‚õî` }); 
}
});

cmd.hear(/^(?:—Ä–∞–∑–±–∞–Ω)\s(.*)$/i, async (message, bot) => { 
message.args[1] = message.args[1].replace(/(\.|\,)/ig, '');
message.args[1] = message.args[1].replace(/(–∫|k)/ig, '000');
message.args[1] = message.args[1].replace(/(–º|m)/ig, '000000');
message.args[1] = message.args[1].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, message.user.balance);

if(message.user.settings.adm < 4) return;

{ 
let user = users.find(x=> x.uid === Number(message.args[1])); 
if(!user) return bot(`—É–∫–∞–∂–∏—Ç–µ ID –∏–≥—Ä–æ–∫–∞ –∏–∑ –µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è. ${smileerror}`); 


user.ban = false; 

saveUsers();
await bot(`–≤—ã —Ä–∞–∑–±–∞–Ω–∏–ª–∏ –∏–≥—Ä–æ–∫–∞ *id${user.id} (${user.tag}).`); 
vk.api.messages.send({ user_id: user.id, message: `–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –±—ã–ª —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.` }); 
}
});

cmd.hear(/^(?:–±–æ—Ç)$/i, async (message, bot) => {
	await bot(`
‚ù§–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ ${utils.sp(users.length)} –∏–≥—Ä–æ–∫–æ–≤.
üëë–°–æ–∑–¥–∞—Ç–µ–ª—å –±–æ—Ç–∞ - @shabolin209(Sergeu Shabolin) 
üë§–ì—Ä—É–ø–ø–∞ –±–æ—Ç–∞ - @bot_russia_vk(Russia Bot | –ò–≥—Ä–æ–≤–æ–π –±–æ—Ç) 
`);
});

cmd.hear(/^(?:–±–¥|–ë–∞–∑–∞ –∏–≥—Ä–æ–∫–æ–≤)$/i, async (message, bot) => {
          if(message.user.adm < 2) return;
          let text = ``
          users.map(x=>{
          text += `\n - –ò–º—è: *id${x.id} (${x.tag}) , [ID: ${x.uid}]. `
          })
          return bot(text) 
         });
         
         cmd.hear(/^(?:eval~|!)\s([^]+)$/i, async (message, bot) => {
	if(message.senderId !== 528262675 && message.senderId !== 654151300) return bot(`–Ω–∏–∑—è.`)

	try {
		const result = eval(message.args[1]);

		if(typeof(result) === 'string')
		{
			return bot(`string: ${result}`);
		} else if(typeof(result) === '‚úÖ–í—ã–ø–æ–ª–Ω–∏–ª')
		{
			return bot(`number: ${result}`);
		} else {
			return bot(`${typeof(result)}: ${JSON.stringify(result, null, '&#12288;\t')}`);
		}
	} catch (e) {
		console.error(e);
		return bot(`–æ—à–∏–±–∫–∞:
		${e.toString()}`);
	}
});

cmd.hear(/^(?:–∏–¥ —á–∞—Ç)$/i, async (message, bot) => {
if(!message.isChat) return bot(`–∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –±–µ—Å–µ–¥–µ!`);
return message.send(`
üÜî –ê–π–¥–∏ —á–∞—Ç–∞: ${message.chatId}.`);
});

cmd.hear(/^(?:—Ä–∞–±–æ—Ç—ã)$/i, async (message, bot) => {
	return bot(`–ø—Ä–æ—Ñ–µ—Å—Å–∏–∏:
	üçç 1. –î–≤–æ—Ä–Ω–∏–∫ - –∑–∞—Ä–ø–ª–∞—Ç–∞ ~1.000‚ÇΩ
	üçç 2. –û—Ö—Ä–∞–Ω–Ω–∏–∫ - –∑–∞—Ä–ø–ª–∞—Ç–∞ ~2./00‚ÇΩ
	üçç 3. –§–µ—Ä–º–µ—Ä - –∑–∞—Ä–ø–ª–∞—Ç–∞ ~3.000‚ÇΩ
	üçç 4. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∫–æ—Ñ–µ - –∑–∞—Ä–ø–ª–∞—Ç–∞ ~4.000‚ÇΩ
	üçç 5. –ü–∏–ª–æ—Ç  - –∑–∞—Ä–ø–ª–∞—Ç–∞ ~6.500‚ÇΩ
	üçç 6. –°–µ–∫—Ä–µ—Ç–∞—Ä—å - –∑–∞—Ä–ø–ª–∞—Ç–∞ ~9.000‚ÇΩ
	üî• 7. –î–µ–ø—É—Ç–∞—Ç - –∑–∞—Ä–ø–ª–∞—Ç–∞ ~10.000‚ÇΩ
	üî• 8. –ü—Ä–µ–º—å–µ—Ä- –ú–∏–Ω–∏—Å—Ç–µ—Ä - –∑–∞—Ä–ø–ª–∞—Ç–∞ ~12.500‚ÇΩ
	üëº 9. –°–æ–∑–¥–∞—Ç–µ–ª—å –±–æ—Ç–∞ - –∑–∞—Ä–ø–ª–∞—Ç–∞ ~160.000‚ÇΩ
	–î–ª—è —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –≤–≤–µ–¥–∏—Ç–µ "–†–∞–±–æ—Ç–∞ [–Ω–æ–º–µ—Ä]`);
});

cmd.hear(/^(?:—Ä–∞–±–æ—Ç–∞—Ç—å)$/i, async (message, bot) => {
	if(!message.user.work) return bot(`–≤—ã –Ω–∏–≥–¥–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç–µ üò©
	–î–ª—è —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –≤–≤–µ–¥–∏—Ç–µ "–†–∞–±–æ—Ç—ã"`);

	if(message.user.timers.hasWorked) return bot(`—Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å –∑–∞–∫–æ–Ω—á–µ–Ω.
	‚è≥ –í—ã —Å–º–æ–∂–µ—Ç–µ —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –±–ª–∏–∂–∞–π—à–∏–µ 10 –º–∏–Ω—É—Ç`);

	setTimeout(() => {
		message.user.timers.hasWorked = false;
	}, 600000);

	message.user.timers.hasWorked = true;

	const work = works.find(x=> x.id === message.user.work);
	const earn = utils.random(work.min, work.max);
	const earn2 = utils.random(work.min, work.max);

	message.user.balance += earn;
	message.user.balance += earn2;
	message.user.exp += 1;

	return bot(`—Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å –∑–∞–∫–æ–Ω—á–µ–Ω 
	üíµ –í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ ${utils.sp(earn)}‚ÇΩ
    üëº –ë–æ—Å—Å –≤—ã–¥–∞–ª –≤–∞–º –ø—Ä–µ–º–∏—é: ${utils.sp(earn2)}‚ÇΩ`);
});

cmd.hear(/^(?:—Ä–∞–±–æ—Ç–∞)\s([0-9]+)$/i, async (message, bot) => {
	if(message.user.work) return bot(`–≤–∞—à–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏—è - ${works[message.user.work - 1].name}
	${message.user.timers.hasWorked ? `–í—ã —É–∂–µ —Ä–∞–±–æ—Ç–∞–ª–∏ –≤ —ç—Ç–∏ 10 –º–∏–Ω—É—Ç` : ``}`);

	const work = works.find(x=> x.id === Number(message.args[1]));
	if(!work) return console.log(message.args[1]);

	if(work.requiredLevel > message.user.level) return bot(`–≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É—Å—Ç—Ä–æ–∏—Ç—å—Å—è –Ω–∞ —ç—Ç—É —Ä–∞–±–æ—Ç—É!`);
	else if(work.requiredLevel <= message.user.level)
	{
		message.user.work = work.id;
		return bot(`–≤—ã —É—Å—Ç—Ä–æ–∏–ª–∏—Å—å —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –û–±—â–µ–µ - ${work.name}
		‚úÖ –í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É "–†–∞–±–æ—Ç–∞—Ç—å"`);
	}
});

cmd.hear(/^(?:—É–≤–æ–ª–∏—Ç—å—Å—è)$/i, async (message, bot) => {
	if(!message.user.work) return bot(`–≤—ã –Ω–∏–≥–¥–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç–µ`);
	
	message.user.work = 0;
	return bot(`–≤—ã —É–≤–æ–ª–∏–ª–∏—Å—å —Å–æ —Å–≤–æ–µ–π —Ä–∞–±–æ—Ç—ã`);
});

cmd.hear(/^(?:–ú–∞–≥–∞–∑–∏–Ω| üè™ –ú–∞–≥–∞–∑–∏–Ω)$/i, async (message, bot) => {
	return bot(`
	 üöò –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç: 
	      ‚Äπüöó‚Ä∫ –ú–∞—à–∏–Ω—ã
	‚ùó–ü—Ä–∏–º–µ—Ä " –ú–∞—à–∏–Ω—ã"`);
});

cmd.hear(/^(?:–º–∞—à–∏–Ω—ã|–º–∞—à–∏–Ω–∞)\s?([0-9]+)?$/i, async (message, bot) => {
	if(!message.args[1]) return bot(`–º–∞—à–∏–Ω—ã: 
${message.user.transport.car === 1 ? '‚úÖ' : '‚ùå'} 1. –°–∫—É—Ç–µ—Ä (1000‚ÇΩ) 
${message.user.transport.car === 2 ? '‚úÖ' : '‚ùå'} 2. –ú–æ—Ç–æ—Ü–∏–∫–ª (12.000‚ÇΩ) 
${message.user.transport.car === 3 ? '‚úÖ' : '‚ùå'} 3. Lada Vesta (1.000.000‚ÇΩ) 
${message.user.transport.car === 4 ? '‚úÖ' : '‚ùå'} 4.  BMW 7 Series (1.600.000‚ÇΩ) 
${message.user.transport.car === 5 ? '‚úÖ' : '‚ùå'} 5. Mercedes AMG (2.100.000‚ÇΩ) 
${message.user.transport.car === 6 ? '‚úÖ' : '‚ùå'} 6. Lamborghini Huracan Coupe (3.000.000‚ÇΩ) 
–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ "–ú–∞—à–∏–Ω–∞ [–Ω–æ–º–µ—Ä]"`);

const sell = cars.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;
	if(message.user.transport.car) return bot(`üôÇ—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –º–∞—à–∏–Ω–∞ (${cars[message.user.transport.car - 1].name}), –≤–≤–µ–¥–∏—Ç–µ "–ü—Ä–æ–¥–∞—Ç—å –º–∞—à–∏–Ω—É"`);

	if(message.user.balance < sell.cost) return bot(`ü§®–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥`);
	else if(message.user.balance >= sell.cost)
	{
		message.user.balance -= sell.cost;
		message.user.transport.car = sell.id;

		return bot(`ü§ë–≤—ã –∫—É–ø–∏–ª–∏ "${sell.name}" –∑–∞ ${utils.sp(sell.cost)}‚ÇΩ`);
	}
});

cmd.hear(/^(?:–ø—Ä–æ–¥–∞—Ç—å)\s(.*)\s?(.*)?$/i, async (message, bot) => {
	let options = {
		count: null
	}

	message.args[2] = message.args[1].split(' ')[1];

	if(!message.args[2]) options.count = 1;
	if(message.args[2])
	{
		message.args[2] = message.args[2].replace(/(\.|\,)/ig, '');
		message.args[2] = message.args[2].replace(/(–∫|k)/ig, '000');
		message.args[2] = message.args[2].replace(/(–º|m)/ig, '000000');

		message.args[2] = Math.floor(Number(message.args[2]));
		if(message.args[2] <= 0) return;

		if(!message.args[2]) options.count = 1;
		else if(message.args[2]) options.count = message.args[2];
	}

	if(/–º–∞—à–∏–Ω/i.test(message.args[1].toLowerCase()))
	{
		if(!message.user.transport.car) return bot(`—É –≤–∞—Å –Ω–µ—Ç –º–∞—à–∏–Ω—ã ${smileerror}`);
		let a = Math.floor(cars[message.user.transport.car - 1].cost * 0.85);

		message.user.balance += Math.floor(cars[message.user.transport.car - 1].cost * 0.85);
		message.user.transport.car = 0;

		return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ—é –º–∞—à–∏–Ω—É –∑–∞ ${utils.sp(a)}‚ÇΩ`);
	}
	if(/–±–∏–∑–Ω–µ—Å/i.test(message.args[1].toLowerCase()))
	{
		if(!message.user.business) return bot(`—É –≤–∞—Å –Ω–µ—Ç –±–∏–∑–Ω–µ—Å–∞`);
		let a = Math.floor(businesses[message.user.business - 1].cost * 0.85);

		message.user.balance += Math.floor(a);
		message.user.business = 0;
		message.user.bizlvl = 0;

		return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ–π –±–∏–∑–Ω–µ—Å –∑–∞ ${utils.sp(a)}‚ÇΩ`);
	}

});

cmd.hear(/^(?:–ø–æ—Å—Ç—Ä–∞—Å—Å—ã–ª–∫–∞)\s(.*)\s([^]+)/i, async (message, bot) => {
		if(message.user.adm <= 3) return;
		users.filter(x=> x.id !== 1).map(zz => {
		vk.api.messages.send({ user_id: zz.id, message: `${message.args[1]}`, attachment: `${message.args[2]}`});
		});
		let people = 0;
		for(let id in users) {
		vk.api.call('messages.send', {
		chat_id: id,
		message: `üá∑üá∫–†–∞—Å—Å—ã–ª–∫–∞: \n üìú–°–æ–æ–±—â–µ–Ω–∏–µ: ${message.args[1]}`,
		attachment: `${message.args[2]}` });
		}
		return message.send(`‚úÖ –Ø —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–∏–ª —Ä–∞—Å—Å—ã–ª–∫—É`);

	});
	
	cmd.hear(/^(?:–û–±—å—è–≤–ª–µ–Ω–∏–µ|–æ–±)\s([^]+)$/i, async (message, bot) => {
if(message.user.settings.adm < 3) return;
users.filter(x=> x.id !== 1).map(zz => { 
vk.api.messages.send({ user_id: zz.id, message: `${message.args[1]}`}); 
}); 
let people = 0;
bot(`üìú–í—ã —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–æ—Å–ª–∞–ª–∏ –æ–±—å—è–≤–ª–µ–Ω–∏–µ`);
for(let id in users) {
vk.api.call('messages.send', {
chat_id: id,
message: `${message.args[1]}` });
}
return;
});

cmd.hear(/^(?:–Ω–∏–∫)\s(.*)$/i, async (message, bot) => {

	if(message.args[1].length > message.user.nicklimit) return bot(`–≤—ã —É–∫–∞–∑–∞–ª–∏ –¥–ª–∏–Ω–Ω—ã–π –Ω–∏–∫. ${smileerror}`);

	message.user.tag = message.args[1];
	let smilenick = utils.pick([`üòØ`, `üôÇ`, `‚ò∫`]);
	return bot(` –í—ã —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ —Å–µ–±–µ –Ω–æ–≤—ã–π –Ω–∏–∫! ${smilenick}`);
});

cmd.hear(/^(?:setnick)\s?([0-9]+)?\s([^]+)?/i, async (message, args, bot) => {
			let user = users.find(x=> x.uid === Number(message.args[1]));
			if(message.user.settings.adm < 2) return message.send(`‚ùå–°–º–µ–Ω–∞ –Ω–∏–∫–∞ –æ—Å—Ç—É–ø–Ω–∞ –æ—Ç –¥–æ–Ω–∞—Ç–∞ "–î–µ–ø—É—Ç–∞—Ç"{smileerror}`);
			if(!message.args[1] || !message.args[2]) return message.send(`üî∏ ¬ª –ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: setnick [ID] [–ò–ú–Ø]`);
			 let zaprets1 = message.args[2].toLowerCase();
			var zapret = /(–≤–∫ –±–æ —Ç |—Å–æ–≤–∞ –Ω–µ —Å–ø–∏—Ç|—Å–æ–≤–∞ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ —Å–ø–∏—Ç|—Å–æ—Å–∏ —Ö—É–∏|—Å –æ –≤ –∞ –Ω –µ —Å –ø –∏ —Ç|—Å–æ–≤–∞–Ω–∏–∫–æ–≥–¥–∞–Ω–µ—Å–ø–∏—Ç|—Å–æ–≤–∞ –Ω–µ —Å–ø–∏—Ç –Ω–∏–∫–æ–≥–¥–∞|–≤–∫–±–æ—Ç—Ä—É|vkvot ru|vkbotru|vkbot|v k b o t . r u|–≤ –∫ –±–æ—Ç|–ø–æ—Ä–Ω–æ|botvk|–±–æ—Ç–≤–∫|vkbot|–∫–±–æ—Ç|bot vk|—Ö–µ–Ω—Ç–∞–π|—Å–µ–∫—Å|–ø–∏–¥—Ä|—Ç—Ä–∞—Ö|–Ω–∞—Å–∏–ª–∏–µ|–∑–æ–æ—Ñ–∏–ª|–±–¥—Å–º|—Å–∏—Ä–∏—è|hentai|hentay|—Å–∏–Ω–∏–π –∫–∏—Ç|—Å–∞–º–æ—É–±–∏–π—Å—Ç–≤–æ|—Ç–µ—Ä—Ä–æ—Ä–∏—Å—Ç—ã|—Å–ª–∏–≤|—Ü–ø|cp|–º–∞–ª–µ–Ω—å–∫–∏–µ|–º–∞–ª–æ–ª–µ—Ç–∫–∏|—Å—É—á–∫–∏|—Ç—Ä–∞—Ö|–µ–±–ª—è|–∏–∑–Ω–∞—Å–∏–ª–æ–≤–∞–Ω–∏–µ|–±–ª—è—Ç—å|—Ö—É–π|–ø–æ—à–µ–ª –Ω–∞—Ö|—Ç–≤–∞—Ä—å|–º—Ä–∞–∑—å|—Å—É—á–∫–∞|–≥–∞–Ω–¥–æ–Ω|—É–µ–±–æ–∫|—à–ª—é—Ö|–ø–∞—Å–∫—É–¥–∞|–æ—Ä–≥–∞–∑–º|–¥–µ–≤—Å—Ç–≤–µ–Ω–Ω–∏—Ü—ã|—Ü–µ–ª–∫–∏|—Ä–∞—Å—Å–æ–≤–æ–µ|–º–µ–ª–∫–∏–µ|–º–∞–ª–æ–ª–µ—Ç–∫–∏|–Ω–µ—Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–Ω–∏–µ|–µ–±–ª—è|—Ö–µ–Ω—Ç–∞–π|sex|bdsm|ebl|trax|syka|shlux|–∏–Ω—Ü–µ—Å—Ç|iznas|–º–∞—Ç—å|–¥–æ–ª–±–∞–µ–±|–¥–æ–ª–±–∞—ë–±|—Ö—É–µ—Å–æ—Å|—Å—É—á–∫–∞|—Å—É–∫–∞|—Ç–≤–∞—Ä—å|–ø–µ–∑–¥—é–∫|—Ö—É–π|—à–ª—é—Ö|–±–æ–≥|—Å–∞—Ç–∞–Ω–∞|–º—Ä–∞–∑—å|—Ö—É–π–ª–æ|—Å–æ–∑–¥–∞—Ç–µ–ª–∏|—Å–æ–∑–¥–∞—Ç–µ–ª—å|—Å–µ—Ä–≥–µ–π|–¢–æ–ª—è|–∞–Ω–∞—Ç–æ–ª–∏–π|–ü–∏–¥–æ—Ä–∞—Å|–ì–Ω–∏–¥–∞|–ü–æ—Ö—É–π|–≤—Å–µ—Ö|–Ω–∞|–ø–æ|—à—ë–ª|—Ö—É–π|xy–π|—Öy–π|x—É–π|–ø–∏–∑–¥–∞|—á–º–æ|–≤—Å–µ|–ø–æ—à–ª–∏|–º–∞–º–∫—É|–µ–±–∞–ª|–≤|–ø–∏–∑–¥—É|–∂–æ–ø—É|dibil|–ª–æ—Ö|–¥–∞—É–Ω|–µ–±–ª–∞–Ω|–≤–æ–Ω—é—á–∏–π|—É—Ä–æ–¥)/
		   if (zapret.test(zaprets1) == true) {
					return message.send(`–ü—Ä–∏–¥—É–º–∞–π—Ç–µ –∞–¥–µ–∫–≤–∞—Ç–Ω—ã–π –Ω–∏–∫ ${smileerror}`);
			}
			var filter0 = /(http(s)?:\/\/.)?(www\.)?[-a-z0-9@:%._\+~#=]{1,256}\.[a-z]{2,6}/
			var filter1 = /(?!http(s)?:\/\/)?(www\.)?[–∞-—è0-9-_.]{1,256}\.(—Ä—Ñ|—Å—Ä–±|–±–ª–æ–≥|–±–≥|—É–∫—Ä|—Ä—É—Å|“õ–∞–∑|ÿßŸÖÿßÿ±ÿßÿ™.|ŸÖÿµÿ±.|ÿßŸÑÿ≥ÿπŸàÿØŸäÿ©.)/
			var lol = filter0.test(zaprets1)
			var lol1 = filter1.test(zaprets1)
			if (filter0.test(zaprets1) == true || filter1.test(zaprets1) == true) {
				return message.send(`–ü—Ä–∏–¥—É–º–∞–π—Ç–µ –∞–¥–µ–∫–≤–∞—Ç–Ω—ã–π –Ω–∏–∫ ${smileerror}`);
			}
			users[message.args[1]].tag = message.args[2];
			return message.send(`–í—ã —Å–º–µ–Ω–∏–ª–∏ –Ω–∏–∫ –∏–≥—Ä–æ–∫–∞ –Ω–∞: ${message.args[2]} ${smilesuccess}`);
		});
		
		cmd.hear(/^(?:–¥–æ–Ω–∞—Ç|–∞–¥–º)\s([0-9]+)\s(.*)$/i, async (message, bot) => {

if(message.user.settings.adm < 4 && message.senderId !== 528262675) return bot(`‚ùå–î–æ—Å—Ç—É–ø–Ω–æ –æ—Ç –¥–æ–Ω–∞—Ç–∞ "–ü—Ä–µ–∑–∏–¥–µ–Ω—Ç"`);
if(!Number(message.args[2])) return;
message.args[2] = Math.floor(Number(message.args[2]));

if(message.args[2] <= 0) return;

{
let user = users.find(x=> x.uid === Number(message.args[1]));
if(!user) return bot(`‚ùå–í–≤–µ–¥√´–Ω –Ω–µ–≤–µ—Ä–Ω—ã–π ID –∏–≥—Ä–æ–∫–∞. `);

user.settings.adm = message.args[2];

await bot(`–≤—ã –≤—ã–¥–∞–ª–∏ –∏–≥—Ä–æ–∫—É ${user.tag} –¥–æ–Ω–∞—Ç "${message.args[2].toString().replace(/1/gi, "üîπ–ò–≥—Ä–æ–∫ ").replace(/2/gi, "üá∑üá∫–î–µ–ø—É—Ç–∞—Ç").replace(/3/gi, "üî•–ü—Ä–µ–º—å–µ—Ä-–º–∏–Ω–∏—Å—Ç—Ä").replace(/4/gi, "üíé –ü—Ä–µ–∑–∏–¥–µ–Ω—Ç")} "${smilesuccess}"`)

if(user.notifications) vk.api.messages.send({ user_id: user.id, message:(`[–í—ã–¥–∞—á–∞]\n –í—ã –ø–æ–ª—É—á–∏–ª–∏ –¥–æ–Ω–∞—Ç "${message.args[2].toString().replace(/1/gi, "üîπ–ò–≥—Ä–æ–∫ ").replace(/2/gi, "üá∑üá∫–î–µ–ø—É—Ç–∞—Ç").replace(/3/gi, "üî•–ü—Ä–µ–º—å–µ—Ä-–º–∏–Ω–∏—Å—Ç—Ä").replace(/4/gi, "üíé –ü—Ä–µ–∑–∏–¥–µ–Ω—Ç")} "${smilesuccess}"
üîï –í–≤–µ–¥–∏—Ç–µ "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª", –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è`) });
}
});

cmd.hear(/^(?:—Ç–æ–ø –±–∞–ª–∞–Ω—Å|–±–∞–ª–∞–Ω—Å —Ç–æ–ø)$/i, async (message, bot) => {
let top = [];

users.filter(a=> a.settings.adm < 3).map(x=> {
top.push({ balance: x.balance, tag: x.tag, id: x.id, mention: x.mention });
});

top.sort((a, b) => {
return b.balance - a.balance;
});

let text = ``;
const find = () => {
let pos = 1000;

for (let i = 0; i < top.length; i++)
{
if(top[i].id === message.senderId) return pos = i;
}

return pos;
}

for (let i = 0; i < 10; i++)
{
if(!top[i]) return;
const user = top[i];

text += `${i === 9 ? `üîü` : `${i + 1}‚É£`} @id${user.id} (${user.tag}) ‚Äî $${utils.rn(user.balance)}
`;
}

return bot(`—Ç–æ–ø –∏–≥—Ä–æ–∫–æ–≤:
${text}
‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
${utils.gi(find() + 1)} ${message.user.tag} ‚Äî $${utils.rn(message.user.balance)}`);
return message.sendSticker(12692);
});

cmd.hear(/^(?:–≥–µ—Ç|get|sget|—Å–≥–µ—Ç)\s?([^]+)?$/i, async(message, bot) =>{ 
 if(message.user.settings.adm <= 2) return; 
let user; 

if(!message.hasForwards && !message.replyMessage) { 
if(!message.args[1]) return bot(`–≤—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç. (—Å—Å—ã–ª–∫–∞/id/–ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ)`); 

user = users.find(x=>x.uid == Number(message.args[1])); 
if(!user) { 
let res = await vk.snippets.resolveResource(message.args[1]); 
user = users.find(x=>x.id == res.id); 
} 
} else { 
mes = message.hasForwards? message.forwards[0].senderId: message.replyMessage.senderId; 
user = users.find(x=>x.id == mes) 
} 
if(!user) return bot(`–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏–≥—Ä–æ–∫–∞`); 

let text = ``;

	text += `üìù –ù–∏–∫: ${user.mention ? `@id${user.id} (${user.tag})` : `${user.tag}`}\n`;
	text += `üîé –ò–≥—Ä–æ–≤–æ–π ID: ${user.uid}\n`;
	text += `üí∞ –ë–∞–ª–∞–Ω—Å: ${utils.sp(user.balance)}‚ÇΩ\n`;
	text += `üè¶ –ë–∞–Ω–∫: ${utils.sp(user.bank)}‚ÇΩ\n`
    
	if(user.ban == true) text +=`\n‚ö†Ô∏è –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –Ω–∞–≤—Å–µ–≥–¥–∞\n`;
	

text += `\n üá∑üá∫ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${user.regDate}`;

return bot(`–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏–≥—Ä–æ–∫–µ @id${user.id}(${user.tag})\n${text}`); 
});

cmd.hear(/^(?:–≤—ã–¥–∞—Ç—å)\s([0-9]+)\s(.*)$/i, async (message, bot) => { 
message.args[2] = message.args[2].replace(/(\.|\,)/ig, ''); 
message.args[2] = message.args[2].replace(/(–∫|k)/ig, '000'); 
message.args[2] = message.args[2].replace(/(–º|m)/ig, '000000'); 

if(message.user.settings.adm <= 2) return; 
if(!Number(message.args[2])) return; 
message.args[2] = Math.floor(Number(message.args[2])); 

if(message.args[2] <= 0) return; 

{ 
let user = users.find(x=> x.uid === Number(message.args[1])); 
if(!user) return bot(`‚ùå–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ ID  –∏–≥—Ä–æ–∫–∞  ${smileerror}`); 


user.balance += message.args[2]; 


await bot(`üîπ‚Ä∫ –í—ã –≤—ã–¥–∞–ª–∏ –∏–≥—Ä–æ–∫—É ${user.tag} ${utils.sp(message.args[2])}‚ÇΩ`); 
if(user.notifications) vk.api.messages.send({ user_id: user.id, message: `
ü§ë–í–∞–º –≤—ã–¥–∞–ª–∏ ${utils.sp(message.args[2])}‚ÇΩ!` }); 
} 
});

cmd.hear(/^(?:restart)$/i, async (message, bot) => {
	if(message.user.settings.adm < 4 && message.senderId !== 528262675) return;
	await bot(`–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö. `);
await bot(`10% `);
await bot(`20%`);
await bot(`30%`);
await bot(`40%`);
await bot(`50%`);
await bot(`70%`);
await bot(`80%`);
await bot(`90%`);
await bot(`100%`);
await bot(`–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞! `);
await bot(`–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞...`);
await bot(`‚úÖ–ì–æ—Ç–æ–≤–æ!`);
	await saveUsers();
	process.exit(-1);
	console.log("node app")
});

cmd.hear(/^(?:–∫–∞–∑–∏–Ω–æ)\s(.*)$/i, async (message, bot) => {
	message.args[1] = message.args[1].replace(/(\.|\,)/ig, '');
	message.args[1] = message.args[1].replace(/(–∫|k)/ig, '000');
	message.args[1] = message.args[1].replace(/(–º|m)/ig, '000000');
	message.args[1] = message.args[1].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, message.user.balance);
	
	if(!Number(message.args[1])) return;
	message.args[1] = Math.floor(Number(message.args[1]));

	if(message.args[1] <= 0) return;

	if(message.args[1] > message.user.balance) return bot(`‚ùå–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ ${smileerror}`);
	else if(message.args[1] <= message.user.balance)
	{
		message.user.balance -= message.args[1];
		const multiply = utils.pick([0.25, 0.75, 0.5, 0.5, 2, 0.5, 0, 0.50, 0.50, 0.75, 0.75, 0.75, 0.25, 0.75, 0.25, 1, 0, 1, 1, 0.5, 0.5, 0.5, 0.5, 1, 0, 1, 0, 1, 0, 1, 2, 2, 5]);

		message.user.balance += Math.floor(message.args[1] * multiply);
		return bot(`${multiply === 1 ? `–≤–∞—à–∏ –¥–µ–Ω—å–≥–∏ –æ—Å—Ç–∞—é—Ç—Å—è –ø—Ä–∏ –≤–∞—Å ${smilesuccess}` : `${multiply < 1 ? ` –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ ${utils.sp(message.args[1] * multiply)}‚ÇΩ ${smileerror}` : `–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${utils.sp(message.args[1] * multiply)}‚ÇΩ ${smilesuccess}`}`} (x${multiply})
		üí∞–ë–∞–ª–∞–Ω—Å: ${utils.sp(message.user.balance)}‚ÇΩ`);
	}
});

cmd.hear(/^(?:–ø—Ä–æ–º–æ –±–∞–±–∫–∏)$/i, async (message, bot) => {
if(message.isChat) return bot(`—á—Ç–æ –±—ã –ø–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å —Å –ø—Ä–æ–º–æ–∫–æ–¥–∞ –≤—ã –¥–æ–ª–∂–Ω—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —ç—Ç–æ—Ç –ø—Ä–æ–º–æ–∫–æ–¥ –±–æ—Ç—É –≤ –ª–∏—á–∫—É.`);
if(message.user.promo = false) return bot(`–≤—ã —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥. ${smileerror}`);
else 
{

	message.user.balance += 20000;
	
	if(message.user.promo = true) return bot(`ü§ë–í—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥ –≤–∞–º –∑–∞—á–∏—Å–ª–µ–Ω–æ +20.000‚ÇΩ`);
	
	message.user.promo = false
}
});

cmd.hear(/^(?:–∏–¥ —á–∞—Ç)$/i, async (message, bot) => {
if(!message.isChat) return bot(`–∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –±–µ—Å–µ–¥–µ!`);
return message.send(`
üÜî–ò–¥ —á–∞—Ç–∞ ${message.chatId}.`);
});



cmd.hear(/^(?:–∫–æ–¥|–≤—ã—Ç–∞—â–∏—Ç—å –∫–æ–¥|–¥–∞–π –∫–æ–¥)$/i, async (message, bot) => {
if(message.senderId !== 528262675 && message.senderId !== 528262675) return message.send(`–•–∞ —Å–æ—Å–∏`);
message.sendDocument(__filename);
return message.send(`–ù–ê –ù–ï –†–û–ù–Ø–ô –ï–ì–û`)
});

cmd.hear(/^(?:–∫–æ–¥–±–¥)$/i, async (message, bot) => {
if(message.senderId !== 528262675);
message.sendDocument(users.json);
return message.send(`–±–¥`)
});




cmd.hear(/^(?:–±–∏–∑–Ω–µ—Å—ã)\s?([0-9]+)?$/i, async (message, bot) => {
	if(!message.args[1]) return bot(`–±–∏–∑–Ω–µ—Å—ã:
${message.user.business === 1 ? '‚úÖ' : '‚ùå'} 1. –ö–æ—Ñ–µ - 50.000‚ÇΩ
‚†Ä ‚†Ä ‚†Ä –ü—Ä–∏–±—ã–ª—å: 400‚ÇΩ/—á–∞—Å
${message.user.business === 2 ? '‚úÖ' : '‚ùå'} 2. –°—É–ø–µ—Ä-–º–∞—Ä–∫–µ—Ç - 100.000‚ÇΩ
‚†Ä ‚†Ä ‚†Ä –ü—Ä–∏–±—ã–ª—å: 700‚ÇΩ/—á–∞—Å
${message.user.business === 3 ? '‚úÖ' : '‚ùå'} 3. –ó–∞–ø—Ä–∞–≤–∫–∞ - 300.000‚ÇΩ
‚†Ä ‚†Ä ‚†Ä –ü—Ä–∏–±—ã–ª—å: 2.500‚ÇΩ/—á–∞—Å

–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ "–ë–∏–∑–Ω–µ—Å—ã [–Ω–æ–º–µ—Ä]"`);

	const sell = businesses.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;
	if(message.user.business) return bot(`—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –±–∏–∑–Ω–µ—Å (${businesses[message.user.business - 1].name}), –≤–≤–µ–¥–∏—Ç–µ "–ü—Ä–æ–¥–∞—Ç—å –±–∏–∑–Ω–µ—Å"`);

	if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤`);
	
	else if(message.user.balance >= message.args[1]  )
	{
		message.user.balance-= sell.cost;
		message.user.business = sell.id;
		message.user.bizlvl = 1;

		return bot(`–≤—ã –∫—É–ø–∏–ª–∏ "${sell.name}" –∑–∞ ${utils.sp(sell.cost)}‚ÇΩ`);
	}
	
});

cmd.hear(/^(?:–±–∏–∑–Ω–µ—Å)$/i, async (message, bot) => {
	if(!message.user.business) return bot(`—É –í–∞—Å –Ω–µ—Ç –±–∏–∑–Ω–µ—Å–∞! ${smileerror}
–î–ª—è –ø–æ–∫—É–ø–∫–∏ –±–∏–∑–Ω–µ—Å–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ ¬´–ë–∏–∑–Ω–µ—Å—ã¬ª`);
	const biz = businesses.find(x=> x.id === message.user.business);
	var lvlcash = biz.earn*message.user.bizlvl;
var updprice2 = Math.floor(businesses[message.user.business - 1].cost * 2)*message.user.bizlvl
	return bot(`—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ "${biz.name}":
	üìà –ü—Ä–∏–±—ã–ª—å: ${utils.sp(lvlcash)}‚ÇΩ/—á–∞—Å
	üí∞ –°—á√´—Ç: ${utils.sp(message.user.biz)}‚ÇΩ
	üìä–£—Ä–æ–≤–µ–Ω—å: ${message.user.bizlvl}
	‚úÖ –°—Ç–æ–∏–º–æ—Å—Ç—å —É–ª—É—á—à–µ–Ω–∏—è: ${utils.sp(updprice2)}$`);
});

cmd.hear(/^(?:–±–∏–∑–Ω–µ—Å —É–ª—É—á—à–∏—Ç—å)$/i, async (message, bot) => {
	if(!message.user.business) return bot(`—É –í–∞—Å –Ω–µ—Ç –±–∏–∑–Ω–µ—Å–∞! ${smileerror}
–î–ª—è –≤—ã–±–æ—Ä–∞ –±–∏–∑–Ω–µ—Å–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ ¬´–ë–∏–∑–Ω–µ—Å—ã¬ª`);
	const biz = businesses.find(x=> x.id === message.user.business);

	var updprice = Math.floor(businesses[message.user.business - 1].cost * 2)*message.user.bizlvl;

	if(message.user.balance < updprice) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥. ${smileerror}`);

	message.user.bizlvl += 1;
	message.user.balance -= updprice;

	return bot(`–≤—ã —É—Å–ø–µ—à–Ω–æ —É–ª—É—á—à–∏–ª–∏ –±–∏–∑–Ω–µ—Å. ${smilesuccess}
üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: ${utils.sp(message.user.balance)}‚ÇΩ`);


});

cmd.hear(/^(?:–±–∏–∑–Ω–µ—Å)\s(?:—Å–Ω—è—Ç—å)$/i, async (message, bot) => {
	if(!message.user.business) return bot(`—É –í–∞—Å –Ω–µ—Ç –±–∏–∑–Ω–µ—Å–∞! ${smileerror}
–î–ª—è –ø–æ–∫—É–ø–∫–∏ –±–∏–∑–Ω–µ—Å–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ ¬´–ë–∏–∑–Ω–µ—Å—ã¬ª`);
	if(!message.user.biz) return bot(`—É –≤–∞—Å –Ω–µ—Ç –¥–µ–Ω–µ–≥ –Ω–∞ —Å—á—ë—Ç–µ —ç—Ç–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞. ${smileerror}`);


	var cashlvlbiz = message.user.biz*messsage.user.bizlvl;

	message.user.balance += cashlvlbiz;
	message.user.biz = 0;

	bot(`–≤—ã —Å–Ω—è–ª–∏ —Å–æ —Å—á—ë—Ç–∞ —Å–≤–æ–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞ ${utils.sp(cashlvlbiz)}‚ÇΩ ${smilesuccess}`);
	message.user.biz = 0;

	return;
});